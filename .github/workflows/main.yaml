# From: https://github.com/NextFaze/github-action-unity-example/blob/main/.github/workflows/main.yml

name: Release on Main

on: 
  # This allows for manual triggering of the action
  workflow_dispatch:
  # This will run this action on every push to the main branch - update as required
  push:
    branches:
      - main ## CHANGE BRANCH?

jobs:    
  build-project:
    name: Build project
    runs-on: ubuntu-latest

    # Enter in project properties here
    env:
      PROJECT_NAME: Doggo-Nogo

    strategy:
      fail-fast: false
      matrix:
        targetPlatform:         # These are the definitions from: https://docs.unity3d.com/ScriptReference/BuildTarget.html
          - WebGL               # Build for WebGL

    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          #UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform:  ${{ matrix.targetPlatform }}
          buildName: ${{ env.PROJECT_NAME }}

      - name: Compress Build
        run: |
          pushd build/${{ matrix.targetPlatform }}
          sudo zip -r ${{ env.PROJECT_NAME }}-${{ matrix.targetPlatform }}.zip ./*
          popd
          sudo mv build/${{ matrix.targetPlatform }}/${{ env.PROJECT_NAME }}-${{ matrix.targetPlatform }}.zip build/${{ env.PROJECT_NAME }}-${{ matrix.targetPlatform }}.zip

      # Upload Artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PROJECT_NAME }}-${{ matrix.targetPlatform }}
          path: build/${{ env.PROJECT_NAME }}-${{ matrix.targetPlatform }}.zip

      #Upload to Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.1
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build/WebGL/${{ env.PROJECT_NAME }} # The folder the action should deploy.

      # More details on usage here: https://github.com/marketplace/actions/create-release
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          prerelease: true
          allowUpdates: true
          tag: "0.0.1" # Or what ever tag you want, but there must be a tag!
          body: "Pre-release"
          artifacts: 'build/${{ env.PROJECT_NAME }}-${{ matrix.targetPlatform }}.zip'
          token: ${{ secrets.GITHUB_TOKEN }}