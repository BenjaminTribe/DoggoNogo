name: Build Action
on: [push]
jobs:
  test:
    name: Test project
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}    
      
  # Build
  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          allowDirtyBuild: true # Change this to recommended solution later https://game.ci/docs/troubleshooting/common-issues/#branch-is-dirty

      # Output
      - uses: actions/upload-artifact@v4
        with:
          name: Build
          path: build
  
  deployToGitHubPages:
  # from: https://davidmfinol.com/gameci-3_linux.html#:~:text=the%20release%20notes.-,Deploy%20to%20the%20Web%20via%20GitHub%20Pages,-deployToGitHubPages%3A%0A%20%20%20%20name
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build #Only run after new build is completed
    #if: github.event.action == 'published' || (contains(github.event.inputs.workflow_mode, 'release') && contains(github.event.inputs.workflow_mode, 'WebGL')) #run on a publish event?
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download WebGL Artifact
        uses: actions/download-artifact@v4
        with:
          name: Build
          path: build
      - name: Copy the WebGL build artifacts to the GitHub Pages directory
        env:
          WEBGL_BUILD_PATH: ${{ format('{0}/build/WebGL/WebGL/', github.workspace) }}
          WEBGL_PAGES_PATH: ${{ format('{0}/docs', github.workspace) }}
        run: cp -R $WEBGL_BUILD_PATH $WEBGL_PAGES_PATH; #OR: rsync -r $WEBGL_BUILD_PATH $WEBGL_PAGES_PATH #OG: find $WEBGL_BUILD_PATH -exec cp {} $WEBGL_PAGES_PATH \;
      - name: Deploy to GitHub Pages
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          file_pattern: docs/**
          commit_message: Deploy to GitHub Pages